// Code generated by MockGen. DO NOT EDIT.
// Source: room.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	entity "github.com/tusmasoma/connectHub-backend/entity"
	usecase "github.com/tusmasoma/connectHub-backend/usecase"
)

// MockChannelUseCase is a mock of ChannelUseCase interface.
type MockChannelUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockChannelUseCaseMockRecorder
}

// MockChannelUseCaseMockRecorder is the mock recorder for MockChannelUseCase.
type MockChannelUseCaseMockRecorder struct {
	mock *MockChannelUseCase
}

// NewMockChannelUseCase creates a new mock instance.
func NewMockChannelUseCase(ctrl *gomock.Controller) *MockChannelUseCase {
	mock := &MockChannelUseCase{ctrl: ctrl}
	mock.recorder = &MockChannelUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelUseCase) EXPECT() *MockChannelUseCaseMockRecorder {
	return m.recorder
}

// CreateChannel mocks base method.
func (m *MockChannelUseCase) CreateChannel(ctx context.Context, params usecase.CreateChannelParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChannel", ctx, params)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateChannel indicates an expected call of CreateChannel.
func (mr *MockChannelUseCaseMockRecorder) CreateChannel(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChannel", reflect.TypeOf((*MockChannelUseCase)(nil).CreateChannel), ctx, params)
}

// ListMembershipChannels mocks base method.
func (m *MockChannelUseCase) ListMembershipChannels(ctx context.Context, membershipID string) ([]entity.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMembershipChannels", ctx, membershipID)
	ret0, _ := ret[0].([]entity.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMembershipChannels indicates an expected call of ListMembershipChannels.
func (mr *MockChannelUseCaseMockRecorder) ListMembershipChannels(ctx, membershipID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMembershipChannels", reflect.TypeOf((*MockChannelUseCase)(nil).ListMembershipChannels), ctx, membershipID)
}
