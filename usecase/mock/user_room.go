// Code generated by MockGen. DO NOT EDIT.
// Source: user_room.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserRoomUseCase is a mock of UserRoomUseCase interface.
type MockUserRoomUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUserRoomUseCaseMockRecorder
}

// MockUserRoomUseCaseMockRecorder is the mock recorder for MockUserRoomUseCase.
type MockUserRoomUseCaseMockRecorder struct {
	mock *MockUserRoomUseCase
}

// NewMockUserRoomUseCase creates a new mock instance.
func NewMockUserRoomUseCase(ctrl *gomock.Controller) *MockUserRoomUseCase {
	mock := &MockUserRoomUseCase{ctrl: ctrl}
	mock.recorder = &MockUserRoomUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRoomUseCase) EXPECT() *MockUserRoomUseCaseMockRecorder {
	return m.recorder
}

// CreateUserRoom mocks base method.
func (m *MockUserRoomUseCase) CreateUserRoom(ctx context.Context, userID, roomID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserRoom", ctx, userID, roomID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserRoom indicates an expected call of CreateUserRoom.
func (mr *MockUserRoomUseCaseMockRecorder) CreateUserRoom(ctx, userID, roomID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserRoom", reflect.TypeOf((*MockUserRoomUseCase)(nil).CreateUserRoom), ctx, userID, roomID)
}
